{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","views/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAIhC,OAFAC,QAAQC,IAAI,CAACH,QAAOC,QAGhB,yBAAKG,UAAU,0CACX,yBAAKC,IAAMJ,EAAMK,IAAKN,IACtB,2BAAIA,K,uBCTHO,EAAO,uCAAI,WAAMC,GAAN,uBAAAC,EAAA,6DACdR,EADc,0FAC2ES,UAAUF,GADrF,sBAGGG,MAAMV,GAHT,cAGdW,EAHc,gBAIGA,EAASC,OAJZ,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBnB,QAVtB,kBAcbc,GAda,4CAAJ,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAe,IAAD,EAEdtB,mBAAS,CAC/B4B,KAAK,GACLQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WACPlB,EAAQC,GACNkB,MAAM,SAAAC,GACCH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAIvB,CAACd,IAEIe,EDhBwBK,CAAapB,GAAhCW,EAFuB,EAE5BL,KAAaQ,EAFe,EAEfA,QAGpB,OAFApB,QAAQC,IAAImB,GAGR,oCACI,wBAAIlB,UAAU,qCAAqCI,GAElDc,GAAW,uBAAGlB,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAGHe,EAAOH,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIY,IAAKZ,EAAIC,IACLD,UEarBa,EA9BM,WAAM,MAIa5C,mBAAS,CAAC,cAJvB,mBAIhBQ,EAJgB,KAIJT,EAJI,KAWvB,OACI,oCACI,iDACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEMS,EAAWsB,KAAI,SAACR,GAAD,OACb,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAWA,UCpBvDuB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.c92d01a8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories ]); \r\n            setInputValue('');  \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    console.log({title, url});\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs =  async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=g0ZNGcs1ImzWuRx9N3CQKrxO0WiqjNTa&q=${encodeURI(category)}&limit=10`;\r\n\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n           \r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem \r\n                                key={img.id} \r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n       getGifs(category)\r\n        .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                }) \r\n        })\r\n    \r\n    },[category]);\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from '../components/AddCategory';\r\nimport { GifGrid } from '../components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Inuyasha'];\r\n\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( ['Hunter X',...categories, ]);\r\n    //     // setCategories(categories => [...categories, 'HunterXHunter'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif GifExpert App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAdd}>Add</button> */}\r\n\r\n            <ol>\r\n               {\r\n                  categories.map((category) => (\r\n                    <GifGrid key={category} category={ category} />\r\n                  )) \r\n               }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './views/GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}